# Configuration Caddy Corrigée - MESRIT
# IMPORTANT: Cette config corrige les problèmes de 404 sur les chunks JS et les APIs

{
	servers {
		trusted_proxies static private_ranges
	}
	email dsi.mesri@gmail.com

	log {
		output file /var/log/caddy/global.log {
			roll_size 100MiB
			roll_keep 5
		}
		level INFO
	}
}

site.mesrit.com, www.site.mesrit.com {
	# Redirection www vers non-www
	@www host www.site.mesrit.com
	redir @www https://site.mesrit.com{uri} permanent

	# ========================================
	# HEADERS DE SÉCURITÉ
	# ========================================
	header {
		# CSP - Compatible Cloudflare Turnstile
		Content-Security-Policy "default-src 'self'; script-src 'self' https://challenges.cloudflare.com https://cdn.jsdelivr.net https://unpkg.com https://static.cloudflareinsights.com blob: 'unsafe-inline'; script-src-elem 'self' https://challenges.cloudflare.com https://cdn.jsdelivr.net https://unpkg.com https://static.cloudflareinsights.com blob: 'unsafe-inline'; style-src 'self' https://fonts.googleapis.com https://challenges.cloudflare.com https://cdn.jsdelivr.net https://unpkg.com 'unsafe-inline'; style-src-elem 'self' https://fonts.googleapis.com https://challenges.cloudflare.com 'unsafe-inline'; style-src-attr 'unsafe-inline'; font-src 'self' https://fonts.gstatic.com https://fonts.googleapis.com https://cdn.jsdelivr.net https://unpkg.com data:; img-src 'self' data: blob: https: http:; media-src 'self' data: blob:; connect-src 'self' https://challenges.cloudflare.com https://api.github.com; frame-src 'self' https://challenges.cloudflare.com; worker-src 'self' blob:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests; block-all-mixed-content;"

		# HSTS
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

		# Protection
		X-Content-Type-Options "nosniff"
		X-Frame-Options "SAMEORIGIN"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "strict-origin-when-cross-origin"
		Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=(), fullscreen=(self), display-capture=()"

		# Cross-Origin
		Cross-Origin-Embedder-Policy "unsafe-none"
		Cross-Origin-Opener-Policy "same-origin"
		Cross-Origin-Resource-Policy "cross-origin"

		# Retirer headers révélateurs
		-Server
		-X-Powered-By
	}

	# ========================================
	# COMPRESSION
	# ========================================
	encode {
		gzip 6
		zstd
		minimum_length 1000
		match {
			header Content-Type text/*
			header Content-Type application/javascript*
			header Content-Type application/json*
			header Content-Type application/xml*
			header Content-Type image/svg+xml*
		}
	}

	# ========================================
	# PROTECTION DES CHEMINS SENSIBLES
	# ========================================
	@blocked {
		path /.env*
		path /.git/*
		path /node_modules/*
		path /.next/*
		path /package.json
		path /package-lock.json
	}
	handle @blocked {
		respond "Forbidden" 403
	}

	# ========================================
	# REVERSE PROXY VERS NEXT.JS
	# ========================================
	# Tout le trafic va vers Next.js qui gère :
	# - Les pages HTML
	# - Les fichiers /_next/static/* (avec cache immutable)
	# - Les APIs /api/*
	# - Les uploads /uploads/*
	# - Les images /images/*

	reverse_proxy localhost:3000 {
		header_up X-Real-IP {remote_host}
		header_up X-Forwarded-For {remote_host}
		header_up X-Forwarded-Proto {scheme}
		header_up X-Forwarded-Host {host}

		transport http {
			dial_timeout 30s
			response_header_timeout 30s
			read_timeout 60s
		}
	}

	# ========================================
	# LOGS
	# ========================================
	log {
		output file /var/log/caddy/mesrit.log {
			roll_size 100MiB
			roll_keep 10
		}
		format json
		level INFO
	}
}

# ========================================
# NOTES IMPORTANTES
# ========================================
#
# Cette configuration simplifie tout en laissant Next.js gérer :
# 1. Le routing de TOUTES les requêtes
# 2. Le cache des fichiers statiques (configuré dans next.config.js)
# 3. Les APIs
# 4. Les uploads
#
# Caddy se contente de :
# 1. SSL/TLS (automatique)
# 2. Headers de sécurité
# 3. Compression
# 4. Protection des chemins sensibles
# 5. Reverse proxy
#
# POURQUOI CETTE APPROCHE ?
#
# L'ancienne config essayait de servir directement les fichiers statiques
# depuis le système de fichiers, ce qui causait des problèmes :
# - Mauvais chemins pour les chunks JS
# - Build ID non synchronisé
# - Complexité inutile
#
# Avec cette config, Next.js gère tout le routing et applique
# automatiquement le bon cache pour chaque type de ressource.
#
# Les headers Cache-Control sont définis par Next.js dans :
# - src/lib/securityHeaders.js (avec USE_CADDY_HEADERS=true)
# - next.config.js (via la fonction headers())
