// scripts/runCrawler.js
// Wrapper CommonJS pour ex√©cuter le crawler ES module

const { execSync } = require('child_process');
const path = require('path');

console.log('üöÄ D√©marrage du crawler...\n');

// D√©terminer le mode (all ou incremental)
const mode = process.argv[2] || 'all';
const days = process.argv[3] || '7';

// Chemin vers le crawler
const crawlerPath = path.join(__dirname, '..', 'src', 'services', 'crawler.js');

// Commande √† ex√©cuter avec node --loader
const command = `node --loader ${crawlerPath} ${mode} ${days}`;

try {
  // Utiliser Next.js pour ex√©cuter le script avec son loader ES modules
  const nextCommand = process.platform === 'win32'
    ? `npx cross-env NODE_OPTIONS="--experimental-loader @next/env/dist/load-dotenv" node -r dotenv/config "${crawlerPath}" ${mode} ${days}`
    : `NODE_OPTIONS="--experimental-loader @next/env/dist/load-dotenv" node -r dotenv/config "${crawlerPath}" ${mode} ${days}`;

  console.log(`Ex√©cution: ${nextCommand}\n`);

  execSync(nextCommand, {
    stdio: 'inherit',
    env: { ...process.env, NODE_ENV: 'production' }
  });

  console.log('\n‚úÖ Crawler termin√© avec succ√®s!');

} catch (error) {
  console.error('\n‚ùå Erreur lors de l\'ex√©cution du crawler:');
  console.error(error.message);
  process.exit(1);
}
